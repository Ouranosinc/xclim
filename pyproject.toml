[build-system]
requires = ["flit_core >=3.9,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "xclim"
authors = [
  {name = "Travis Logan", email = "logan.travis@ouranos.ca"}
]
maintainers = [
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"},
  {name = "Pascal Bourgault", email = "bourgault.pascal@ouranos.ca"}
]
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.10.0"
keywords = ["xclim", "xarray", "climate", "climatology", "bias correction", "ensemble", "indicators", "analysis"]
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Scientific/Engineering :: Atmospheric Science",
  "Topic :: Scientific/Engineering :: Hydrology",
  "Typing :: Typed"
]
dynamic = ["description", "version"]
dependencies = [
  "boltons >=20.1",
  "bottleneck >=1.3.1",
  "cf-xarray >=0.9.3", # cf-xarray is differently named on conda-forge
  "cftime >=1.4.1",
  "click >=8.1",
  "dask[array] >=2024.8.1",
  "filelock >=3.14.0",
  "jsonpickle >=3.1.0",
  "numba >=0.54.1",
  "numpy >=1.23.0",
  "packaging >=24.0",
  "pandas >=2.2",
  "pint >=0.24.4",
  "pyarrow >=10.0.1", # Strongly encouraged for pandas v2.2.0+
  "pyyaml >=6.0.1",
  "scikit-learn >=1.1.0",
  "scipy >=1.9.0",
  "statsmodels >=0.14.2",
  "xarray >=2023.11.0,!=2024.10.0",
  "yamale >=5.0.0"
]

[project.optional-dependencies]
dev = [
  # Dev tools and testing
  "black[jupyter] ==25.1.0",
  "blackdoc ==0.3.9",
  "bump-my-version ==0.32.1",
  "codespell ==2.4.1",
  "coverage[toml] >=7.5.0",
  "deptry ==0.23.0",
  "flake8 >=7.1.1",
  "flake8-rst-docstrings >=0.3.0",
  "h5netcdf>=1.3.0",
  "ipython >=8.5.0",
  "isort ==6.0.0",
  "mypy >=1.10.0",
  "nbconvert >=7.16.4",
  "nbqa >=1.8.2",
  "nbval >=0.11.0",
  "numpydoc >=1.8.0",
  "pandas-stubs >=2.2",
  "pip >=24.2.0",
  "pooch >=1.8.0",
  "pre-commit >=3.7",
  "pylint >=3.3.1",
  "pytest >=8.0.0",
  "pytest-cov >=5.0.0",
  "pytest-socket >=0.6.0",
  "pytest-xdist[psutil] >=3.2",
  "ruff >=0.7.0",
  "tokenize-rt >=5.2.0",
  "tox >=4.21.2",
  "tox-gh >=1.4.4",
  "vulture ==2.14",
  "xdoctest >=1.1.5",
  "yamllint ==1.35.1"
]
docs = [
  # Documentation and examples
  "cairosvg >=2.6.0",
  "distributed >=2.0",
  "furo >=2023.9.10",
  "ipykernel",
  "matplotlib >=3.6.0",
  "nbsphinx >=0.9.5",
  "nc-time-axis >=1.4.1",
  "pooch >=1.8.0",
  "pybtex >=0.24.0",
  "sphinx >=7.0.0",
  "sphinx-autobuild >=2024.4.16",
  "sphinx-autodoc-typehints",
  "sphinx-codeautolink >=0.16.2",
  "sphinx-copybutton",
  "sphinx-mdinclude",
  "sphinxcontrib-bibtex",
  "sphinxcontrib-svg2pdfconverter[Cairosvg]"
]
extras = ["fastnanquantile >=0.0.2", "flox >=0.9", "POT >=0.9.4"]
all = ["xclim[dev]", "xclim[docs]", "xclim[extras]"]

[project.scripts]
xclim = "xclim.cli:cli"

[project.urls]
"Homepage" = "https://xclim.readthedocs.io/"
"Source" = "https://github.com/Ouranosinc/xclim/"
"Changelog" = "https://xclim.readthedocs.io/en/stable/history.html"
"Issue tracker" = "https://github.com/Ouranosinc/xclim/issues"
"Mastodon" = "https://fosstodon.org/@xclim"
"Zenodo" = "https://doi.org/10.5281/zenodo.2795043"
"About Ouranos" = "https://www.ouranos.ca/en/"

[tool]

[tool.black]
target-version = [
  "py310",
  "py311",
  "py312"
]

[tool.bumpversion]
current_version = "0.54.1-dev.13"
commit = true
commit_args = "--no-verify --signoff"
tag = false
allow_dirty = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\-(?P<release>[a-z]+)(\\.(?P<build>\\d+)))?"
serialize = [
  "{major}.{minor}.{patch}-{release}.{build}",
  "{major}.{minor}.{patch}"
]

[[tool.bumpversion.files]]
filename = "src/xclim/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[tool.bumpversion.parts.build]
independent = false

[tool.bumpversion.parts.release]
optional_value = "release"
values = [
  "dev",
  "release"
]

[tool.codespell]
skip = '*xclim/data/*.json,*docs/_build,*docs/notebooks/xclim_training/*.ipynb,*docs/references.bib,*.gz,*.nc,*.png,*.svg,*.whl'
ignore-words-list = "absolue,astroid,bloc,bui,callendar,degreee,environnement,hanel,indx,inferrable,lond,nam,nd,ot,ressources,socio-economic,sie,vas"

[tool.coverage.run]
relative_files = true
omit = ["tests/*.py", "src/xclim/testing/conftest.py"]

[tool.deptry]
extend_exclude = ["docs"]
ignore_notebooks = true
pep621_dev_dependency_groups = ["all", "dev", "docs"]

[tool.deptry.package_module_name_map]
"scikit-learn" = "sklearn"
"pyyaml" = "yaml"
"POT" = "ot"

[tool.deptry.per_rule_ignores]
DEP001 = ["SBCK"]
DEP002 = ["bottleneck", "h5netcdf", "pyarrow"]
DEP004 = ["matplotlib", "pooch", "pytest", "pytest_socket"]

[tool.flit.sdist]
include = [
  "AUTHORS.rst",
  "CHANGELOG.rst",
  "CI/requirements_upstream.txt",
  "CITATION.cff",
  "CONTRIBUTING.rst",
  "LICENSE",
  "Makefile",
  "README.rst",
  "docs/**/*.gif",
  "docs/**/*.jpg",
  "docs/**/*.png",
  "docs/**/*.rst",
  "docs/Makefile",
  "docs/conf.py",
  "docs/make.bat",
  "docs/notebooks/_finder.py",
  "src/xclim/**/*.json",
  "src/xclim/**/*.py",
  "src/xclim/**/*.txt",
  "src/xclim/**/*.yml",
  "tests/**/*.py",
  "tests/**/*.txt",
  "tox.ini"
]
exclude = [
  "**/*.py[co]",
  "**/__pycache__",
  ".*",
  "CI/requirements_ci.txt",
  "docs/_*",
  "docs/modules.rst",
  "docs/paper/*",
  "docs/xclim*.rst",
  "pylintrc"
]

[tool.mypy]
python_version = 3.10
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
plugins = ["numpy.typing.mypy_plugin"]
strict = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
  "boltons.*",
  "cftime.*",
  "jsonpickle.*",
  "numba.*",
  "pytest_socket.*",
  "SBCK.*",
  "scipy.*",
  "sklearn.*",
  "statsmodels.*",
  "yamale.*",
  "yaml.*"
]
ignore_missing_imports = true

[tool.numpydoc_validation]
checks = [
  "all", # report on all checks, except the below
  "ES01", # "No extended summary found"
  "EX01", # "No examples section found"
  "GL06", # "Found unknown section \"{section}\""
  "SA01", # "See Also section not found",
  "SS01" # "No summary found"
]
# remember to use single quotes for regex in TOML
exclude = [
  # don't report on objects that match any of these regex
  '\.undocumented_method$',
  '\.__repr__$',
  # any object starting with an underscore is a private object
  '\._\w+'
]
override_SS05 = [
  # override SS05 to allow docstrings starting with these words
  '^Access ',
  '^Assess ',
  '^Days ',
  '^Degree-days ',
  '^Griffiths ',
  '^Process ',
  '^Statistics '
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
  "-ra",
  "--color=yes",
  "--numprocesses=0",
  "--maxprocesses=8",
  "--dist=worksteal",
  "--strict-config",
  "--strict-markers"
]
log_cli_level = "INFO"
norecursedirs = ["docs/notebooks/*"]
filterwarnings = ["ignore::UserWarning"]
testpaths = [
  "tests"
]
pythonpath = [
  "src"
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL", "NUMBER", "ELLIPSIS"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "requires_docs: mark tests that can only be run with documentation present (deselect with '-m \"not requires_docs\"')",
  "requires_internet: mark tests that require internet access (deselect with '-m \"not requires_internet\"')"
]
xfail_strict = true

[tool.ruff]
src = ["xclim"]
line-length = 150
exclude = [
  ".git",
  "build",
  ".eggs"
]
extend-include = [
  "*.ipynb" # Include notebooks
]

[tool.ruff.format]
line-ending = "auto"

[tool.ruff.lint]
exclude = [
  "docs/notebooks/xclim_training/*.ipynb"
]
extend-select = [
  "D213", # multi-line-summary-second-line
  "RUF022" # unsorted-dunder-all
]
ignore = [
  "B028", # no-explicit-stacklevel
  "D205", # blank-line-after-summary
  "D212", # multi-line-summary-first-line
  "D400", # ends-in-period
  "D401" # non-imperative-mood
]
preview = true
select = [
  "B", # bugbear
  "C90", # mccabe-complexity
  "D", # docstrings
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # imports
  "N802", # invalid-function-name
  "S", # bandit
  "UP", # pyupgrade
  "W" # pycodestyle warnings
]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.flake8-import-conventions.aliases]
"matplotlib.pyplot" = "plt"
"xclim.indices" = "xci"
numpy = "np"
pandas = "pd"
scipy = "sp"
xarray = "xr"

[tool.ruff.lint.isort]
case-sensitive = true
detect-same-package = false
known-first-party = ["xclim"]
no-lines-before = ["future"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.per-file-ignores]
"docs/*.py" = ["D100", "D101", "D102", "D103"]
"docs/notebooks/*.ipynb" = ["E225", "E226", "E231"]
"src/xclim/**/__init__.py" = ["F401", "F403"]
"src/xclim/core/indicator.py" = ["D214", "D405", "D406", "D407", "D411"]
"src/xclim/core/locales.py" = ["E501", "W505"]
"src/xclim/core/missing" = ["D103"]
"src/xclim/indices/_agro.py" = ["E501"]
"src/xclim/indices/fire/_cffwis.py" = ["D103"]
"src/xclim/sdba/utils.py" = ["D103"]
"tests/**/*test*.py" = ["D100", "D101", "D102", "D103", "N802", "S101"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 180

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.vulture]
exclude = []
ignore_decorators = ["@pytest.fixture"]
ignore_names = []
min_confidence = 90
paths = ["src/xclim", "tests"]
sort_by_size = true
