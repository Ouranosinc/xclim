[build-system]
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "xclim"
authors = [
  {name = "Travis Logan", email = "logan.travis@ouranos.ca"}
]
maintainers = [
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"},
  {name = "Pascal Bourgault", email = "bourgault.pascal@ouranos.ca"}
]
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.8.0"
keywords = ["xclim", "xarray", "climate", "climatology", "bias correction", "ensemble", "indicators", "analysis"]
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering :: Atmospheric Science"
]
dynamic = ["description", "version"]
dependencies = [
  "boltons>=20.1",
  "bottleneck>=1.3.1",
  "cf-xarray>=0.6.1",
  "cftime>=1.4.1",
  "Click>=8.1",
  "dask[array]>=2.6",
  "jsonpickle",
  "numba",
  "numpy>=1.16",
  "pandas>=0.23",
  "pint>=0.10",
  "pyyaml",
  "scikit-learn>=0.21.3",
  "scipy>=1.2,<1.9", # see: https://github.com/Ouranosinc/xclim/issues/1142
  "statsmodels",
  "xarray>=2022.06.0"
]

[project.optional-dependencies]
dev = [
  # Dev tools and testing
  "black >=23.1",
  "blackdoc",
  "bump2version",
  "coverage[toml]",
  "flake8",
  "flake8-rst-docstrings",
  "ipython",
  "mypy",
  "nbqa",
  "nbval",
  "pre-commit >=2.9",
  "pydocstyle >=5.1.1",
  "pybtex",
  "pylint <2.15",
  "pytest",
  "pytest-cov",
  "pytest-xdist[psutil] >=3.2",
  "tokenize-rt",
  "tox",
  # "tox-conda",  # Will be added when a tox@v4.0+ compatible plugin is released.
  "xdoctest",
  "yamale",
  "yamllint",
  # Documentation and examples
  "distributed >=2.0",
  "ipykernel",
  "matplotlib",
  "nbsphinx",
  "nc-time-axis",
  "netCDF4 >=1.4",
  "pooch",
  "sphinx",
  "sphinx-codeautolink",
  "sphinx-copybutton",
  "sphinx-rtd-theme >=1.0",
  "sphinxcontrib-bibtex",
  "sphinxcontrib-svg2pdfconverter[Cairosvg]"
]

[project.scripts]
xclim = "xclim.cli:cli"

[project.urls]
"Homepage" = "https://xclim.readthedocs.io/"
"Source" = "https://github.com/Ouranosinc/xclim/"
"Changelog" = "https://xclim.readthedocs.io/en/stable/history.html"
"Issue tracker" = "https://github.com/Ouranosinc/xclim/issues"
"About Ouranos" = "https://www.ouranos.ca/en/"

[tool]

[tool.black]
target-version = [
  "py38"
]

[tool.coverage.run]
relative_files = true
omit = ["*/tests/*.py"]

[tool.flit.sdist]
include = [
  "AUTHORS.rst",
  "CONTRIBUTING.rst",
  "HISTORY.rst",
  "LICENSE",
  "README.rst",
  "docs/**/*.gif",
  "docs/**/*.jpg",
  "docs/**/*.png",
  "docs/**/*.rst",
  "docs/Makefile",
  "docs/conf.py",
  "docs/make.bat",
  "requirements_upstream.txt",
  "xclim/**/*.json",
  "xclim/**/*.py",
  "xclim/**/*.txt",
  "xclim/**/*.yml"
]
exclude = [".*", "pylintrc", "**/__pycache__", "**/*.py[co]", "docs/_*", "docs/xclim*.rst", "docs/modules.rst"]

[tool.isort]
profile = "black"
py_version = 38
append_only = true
add_imports = "from __future__ import annotations"

[tool.mypy]
python_version = 3.8
show_error_codes = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
  "boltons.*",
  "bottleneck.*",
  "cftime.*",
  "clisops.core.subset.*",
  "dask.*",
  "lmoments3.*",
  "numba.*",
  "numpy.*",
  "pandas.*",
  "pint.*",
  "scipy.*",
  "sklearn.cluster.*",
  "xarray.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
  "--verbose",
  "--color=yes",
  "--numprocesses=0",
  "--maxprocesses=8",
  "--dist=worksteal"
]
norecursedirs = ["docs/notebooks/*"]
filterwarnings = ["ignore::UserWarning"]
testpaths = "xclim/testing/tests xclim/testing/tests/test_sdba"
usefixtures = "xdoctest_namespace"
doctest_optionflags = ["NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL", "NUMBER", "ELLIPSIS"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "requires_docs: mark tests that can only be run with documentation present",
  "thread_unsafe: Causes segfaults with pytest-xdist distributed testing"
]
