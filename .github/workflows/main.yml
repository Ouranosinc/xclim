name: xclim Testing Suite

on:
  push:
    branches:
      - master
    paths-ignore:
      - CHANGES.rst
      - README.rst
      - pyproject.toml
      - setup.cfg
      - xclim/__init__.py
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  pull_request_review:
    types:
      - submitted

env:
  XCLIM_TESTDATA_BRANCH: v2023.5.4

jobs:
  black:
    name: Black (Python${{ matrix.python-version }})
    runs-on: ubuntu-latest
    if: |
      ((github.event_name == 'pull_request') && (github.event.action != 'labeled')) ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    strategy:
      matrix:
        python-version:
          - "3.8"
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pylint and tox
        run: pip install pylint tox~=4.0
      - name: Run pylint
        run: pylint --rcfile=pylintrc --disable=import-error --exit-zero xclim
      - name: Run linting suite
        run: tox -e black

  test-py38:
    name: test-${{ matrix.tox-env }} (Python${{ matrix.python-version }})
    needs: black
    if: |
      (github.event_name == 'pull_request') && !contains(github.event.pull_request.labels.*.name, 'approved')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tox-env:
          - "py38"
        python-version:
          - "3.8"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: pip install tox~=4.0
      - name: Test with tox
        run: tox -e ${{ matrix.tox-env }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-pypi:
    needs: black
    name: test-${{ matrix.tox-env }} (Python${{ matrix.python-version }})
    if: |
      contains(github.event.pull_request.labels.*.name, 'approved') ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tox-env: py38-coverage
            python-version: "3.8"
          - tox-env: py39-coverage-sbck-eofs
            python-version: "3.9"
          - tox-env: notebooks_doctests
            python-version: "3.10"
    steps:
      - uses: actions/checkout@v3
      - name: Install Eigen3
        if: contains(matrix.tox-env, 'sbck')
        run: |
          sudo apt-get update
          sudo apt-get install libeigen3-dev
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: pip install tox~=4.0
      - name: Test with tox
        run: tox -e ${{ matrix.tox-env }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-{{ matrix.tox-env }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

  test-conda:
    needs: black
    name: test-conda-${{ matrix.tox-env }} (Python${{ matrix.python-version }})
    if: |
      contains(github.event.pull_request.labels.*.name, 'approved') ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tox-env: py310
            python-version: "3.10"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Conda (Micromamba) with Python3.10
        uses: mamba-org/provision-with-micromamba@main
        with:
          cache-downloads: true
          micromamba-version: 'latest'
          environment-file: environment.yml
          extra-specs: |
            python=${{ matrix.python-version }}
      - name: Conda and Mamba versions
        run: |
          conda --version
          echo "micromamba: $(micromamba --version)"
      - name: Install xclim
        run: |
          python -m pip install --no-user --editable .
      - name: Check versions
        run: |
          conda list
          xclim show_version_info
          pip check
      - name: Test with pytest
        run: |
          pytest --numprocesses=logical --durations=10 --cov=xclim --cov-report=term-missing
#      - name: Install tox
#        shell: bash -l {0}
#        run: |
#          mamba install -n xclim39 tox tox-conda
#      - name: Test
#        shell: bash -l {0}
#        run: |
#          conda activate xclim39
#          tox -e opt-slow
#        env:
#          CONDA_EXE: mamba
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Report coverage
        run: |
          pip install --upgrade coveralls
          coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-{{ matrix.tox-env }}-opt-slow
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

  finish:
    needs:
      - test-pypi
      - test-conda
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Coveralls Finished
        run: |
          pip install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
