name: Testing

on:
  push:
    branches:
      - main
    paths-ignore:
      - CHANGELOG.rst
      - README.rst
      - pyproject.toml
      - src/xclim/__init__.py
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  pull_request_review:
    types:
      - submitted

env:
  XCLIM_TESTDATA_BRANCH: v2025.3.11

concurrency:
  # For a given workflow, if we push to the same branch, cancel all previous builds on that branch except on main.
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: |
      (github.event.action != 'labeled') ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.electricitymap.org:443
            api.github.com:443
            api.green-coding.io:443
            files.pythonhosted.org:443
            github.com:443
            ip-api.com:80
            ipapi.co:443
            proxy.golang.org:443
            pypi.org:443
            sum.golang.org:443
      - name: Start Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: start-measurement
          branch: ${{ github.head_ref || github.ref_name }}
        continue-on-error: true
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python3
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: "3.x"
          cache: 'pip'
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Setup Python Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Environment setup (Python${{ matrix.python-version }}, lint)'
        continue-on-error: true
      - name: Environment Caching
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: |
            ${{ matrix.testdata-cache }}
            .tox
          key: ${{ runner.os }}-xclim-testdata-${{ env.XCLIM_TESTDATA_BRANCH }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}-lint
      - name: Run pylint
        run: |
          python -m pylint --rcfile=.pylintrc.toml --disable=import-error --exit-zero src/xclim
      - name: Run linting suite
        run: |
          python -m tox -e lint
      - name: Tests measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Lint (Python${{ matrix.python-version }})'
        continue-on-error: true
      - name: Show Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: display-results
        continue-on-error: true

  test-preliminary:
    name: Python${{ matrix.python-version }} (${{ matrix.os }})
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.11" ]
        testdata-cache: [ '~/.cache/xclim-testdata' ]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.electricitymap.org:443
            api.github.com:443
            api.green-coding.io:443
            coveralls.io:443
            files.pythonhosted.org:443
            github.com:443
            ip-api.com:80
            ipapi.co:443
            proxy.golang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            sum.golang.org:443
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: start-measurement
          branch: ${{ github.head_ref || github.ref_name }}
        continue-on-error: true
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Setup Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Environment setup (Python${{ matrix.python-version }}, standard)'
        continue-on-error: true
      - name: Environment Caching
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: |
            ${{ matrix.testdata-cache }}
            .tox
          key: ${{ runner.os }}-xclim-testdata-${{ env.XCLIM_TESTDATA_BRANCH }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}-Python${{ matrix.python-version }}
      - name: Test with tox
        run: |
          python -m tox -- -m 'not slow'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.python-version }}-ubuntu-latest-preliminary
          COVERALLS_PARALLEL: true
      - name: Tests measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Testing with tox (Python${{ matrix.python-version }})'
        continue-on-error: true
      - name: Show Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: display-results
        continue-on-error: true

  test-pypi:
    needs: lint
    name: Python${{ matrix.python-version }} (${{ matrix.os }}, ${{ matrix.tox-env }})
    if: |
      contains(github.event.pull_request.labels.*.name, 'approved') ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      matrix:
        # Linux builds
        os: [ 'ubuntu-latest', ]
        testdata-cache: [ '~/.cache/xclim-testdata' ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        markers: [ '-m "not slow"' ]
        tox-env: [ 'standard' ]
        include:
          # Windows builds
          - os: 'windows-latest'
            testdata-cache: 'C:\Users\runneradmin\AppData\Local\xclim-testdata\xclim-testdata\Cache'
            markers: -m 'not slow'
            python-version: "3.12"
            tox-env: py312-coverage-prefetch  # Test data prefetch is needed for Windows
          # macOS builds
          - os: 'macos-latest'
            testdata-cache: '~/Library/Caches/xclim-testdata'
            markers: ''  # Slow tests
            python-version: "3.11"
            tox-env: py311-coverage-extras-lmoments
          # Specialized tests
          - os: 'ubuntu-latest'
            testdata-cache: '~/.cache/xclim-testdata'
            markers: -m 'not requires_internet and not slow'
            python-version: "3.11"
            tox-env: py311-coverage-sbck-offline-prefetch
          - os: 'ubuntu-latest'
            testdata-cache: '~/.cache/xclim-testdata'
            markers: '' # No markers for notebooks
            python-version: "3.11"
            tox-env: notebooks
          - os: 'ubuntu-latest'
            testdata-cache: '~/.cache/xclim-testdata'
            markers: '' # No markers for doctests
            python-version: "3.12"
            tox-env: doctests
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.electricitymap.org:443
            api.github.com:443
            api.green-coding.io:443
            azure.archive.ubuntu.com:80
            coveralls.io:443
            files.pythonhosted.org:443
            github.com:443
            ip-api.com:80
            ipapi.co:443
            motd.ubuntu.com:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            sum.golang.org:443
      - name: Start Energy Measurement
        if : ${{ matrix.os == 'ubuntu-latest' }}
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: start-measurement
          branch: ${{ github.head_ref || github.ref_name }}
        continue-on-error: true
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Eigen3 (SBCK)
        if: ${{ matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install libeigen3-dev
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Setup Energy Measurement
        if : ${{ matrix.os == 'ubuntu-latest' }}
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Environment setup (Python${{ matrix.python-version }}, ${{ matrix.tox-env }})'
        continue-on-error: true
      - name: Environment Caching
        # if prefetch is not in tox-env
        if: contains(matrix.tox-env, 'prefetch') == false
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: |
            ${{ matrix.testdata-cache }}
            .tox
          key: ${{ runner.os }}-xclim-testdata-${{ env.XCLIM_TESTDATA_BRANCH }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}-Python${{ matrix.python-version }}
      - name: Test with tox
        if: ${{ matrix.tox-env == 'standard' }}
        run: |
          python -m tox -- ${{ matrix.markers }};
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.python-version }}-${{ matrix.os }}-${{ matrix.tox-env }}
          COVERALLS_PARALLEL: true
      - name: Test with tox (specialized tests)
        if: ${{ matrix.tox-env != 'standard' }}
        run: |
          python -m tox -e ${{ matrix.tox-env }} -- ${{ matrix.markers }};
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.python-version }}-${{ matrix.os }}-${{ matrix.tox-env }}
          COVERALLS_PARALLEL: true
      - name: Tests measurement
        if : ${{ matrix.os == 'ubuntu-latest' }}
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Testing with tox (Python${{ matrix.python-version }}, ${{ matrix.tox-env }})'
        continue-on-error: true
      - name: Show Energy Results
        if : ${{ matrix.os == 'ubuntu-latest' }}
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: display-results
        continue-on-error: true

  test-conda:
    needs: lint
    name: Python${{ matrix.python-version }} (${{ matrix.os }}, conda)
    if: |
      contains(github.event.pull_request.labels.*.name, 'approved') ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.10", "3.13" ]
        testdata-cache: [ '~/.cache/xclim-testdata' ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.electricitymap.org:443
            api.github.com:443
            api.green-coding.io:443
            conda.anaconda.org:443
            coveralls.io:443
            files.pythonhosted.org:443
            github.com:443
            ip-api.com:80
            ipapi.co:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            sum.golang.org:443
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: start-measurement
          branch: ${{ github.head_ref || github.ref_name }}
        continue-on-error: true
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@0dea6379afdaffa5d528b3d1dabc45da37f443fc # v2.0.4
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: environment.yml
          create-args: >-
            python=${{ matrix.python-version }}
      - name: Test Data Caching
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: |
            ${{ matrix.testdata-cache }}
          key: ${{ runner.os }}-xclim-testdata-${{ env.XCLIM_TESTDATA_BRANCH }}-conda-${{ hashFiles('pyproject.toml', 'tox.ini') }}-Python${{ matrix.python-version }}
      - name: Install xclim
        run: |
          python -m pip install --no-user --editable .
      - name: Check versions
        run: |
          micromamba list
          xclim show_version_info
          python -m pip check || true
      - name: Environment Setup Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Environment setup (conda, Python${{ matrix.python-version }})'
        continue-on-error: true
      - name: Test with pytest
        run: |
          python -m pytest --numprocesses=logical --durations=10 --cov=xclim --cov-report=lcov
      - name: Report Coverage
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          flag-name: run-{{ matrix.python-version }}-conda
          parallel: true
      - name: Tests measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Testing with pytest (conda, Python${{ matrix.python-version }})'
        continue-on-error: true
      - name: Show Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: display-results
        continue-on-error: true

  finish:
    name: Finish
    needs:
      - test-preliminary
      - test-pypi
      - test-conda
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.electricitymap.org:443
            api.github.com:443
            api.green-coding.io:443
            coveralls.io:443
            files.pythonhosted.org:443
            github.com:443
            ip-api.com:80
            ipapi.co:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            pypi.org:443
            sum.golang.org:443
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: start-measurement
          branch: ${{ github.head_ref || github.ref_name }}
        continue-on-error: true
      - name: Coveralls Finished
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          parallel-finished: true
      - name: Finish measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: get-measurement
          label: 'Finish Run'
        continue-on-error: true
      - name: Show Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@7ff5628108e21227662ce881f10156eb9deab891 # v4.4
        with:
          task: display-results
        continue-on-error: true
